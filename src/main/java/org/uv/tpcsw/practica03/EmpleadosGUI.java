/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package org.uv.tpcsw.practica03;

import java.awt.event.ActionEvent;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JInternalFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.Transaction;

/**
 *
 * @author samantha
 */
public class EmpleadosGUI extends javax.swing.JInternalFrame {

    /**
     * Creates new form EmpleadosGUI
     */
    public EmpleadosGUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        txtTelefono = new javax.swing.JTextField();
        Departamento = new javax.swing.JLabel();
        txtDireccion = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        btnGuardar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        TablaEmpleados = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        empTelefono = new javax.swing.JTextField();
        Departamento1 = new javax.swing.JLabel();
        empDireccion = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        empNombre = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        btnGuardarEmp = new javax.swing.JButton();
        empDepartamento = new javax.swing.JComboBox<>();
        btnModificarEmp = new javax.swing.JButton();
        btnEliminarEmp = new javax.swing.JButton();
        btnBuscarTodosEmp = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btnBuscarIDEmp = new javax.swing.JButton();
        empClave = new javax.swing.JTextField();

        Session session = HibernateUtil.getSessionFactory().getCurrentSession();
        session.beginTransaction();
        List<Departamento> listaDepartamentos = session.createQuery("from Departamento", Departamento.class).list();

        // Loop through the list and add the department names to the JComboBox
        for (Departamento departamento : listaDepartamentos) {
            jComboBox1.addItem(departamento.getNombre());
        }
        session.getTransaction().commit();
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jLabel6.setText("Telefono");

        Departamento.setText("Departamento");

        jLabel5.setText("Direccion");

        txtNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombreActionPerformed(evt);
            }
        });

        jLabel4.setText("Nombre");

        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        setClosable(true);
        setMaximumSize(new java.awt.Dimension(800, 600));
        setMinimumSize(new java.awt.Dimension(600, 400));
        setPreferredSize(new java.awt.Dimension(700, 500));
        setRequestFocusEnabled(false);

        TablaEmpleados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Clave", "Nombre", "Direccion", "Telefono", "Departamento"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false, true, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(TablaEmpleados);

        jLabel7.setText("Telefono");

        Departamento1.setText("Departamento");

        jLabel8.setText("Direccion");

        empNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                empNombreActionPerformed(evt);
            }
        });

        jLabel9.setText("Nombre");

        btnGuardarEmp.setText("Guardar");
        btnGuardarEmp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarEmpActionPerformed(evt);
            }
        });

        Session sess = HibernateUtil.getSessionFactory().getCurrentSession();
        sess.beginTransaction();
        List<Departamento> listaDepts = sess.createQuery("from Departamento", Departamento.class).list();

        // Create a new model for jComboBox2
        DefaultComboBoxModel<String> comboBoxModel = new DefaultComboBoxModel<>();

        // Loop through the list and add the department names to the model
        for (Departamento departamento : listaDepts) {
            comboBoxModel.addElement(departamento.getNombre());
        }
        empDepartamento.setModel(comboBoxModel);
        sess.getTransaction().commit();
        empDepartamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                empDepartamentoActionPerformed(evt);
            }
        });
        empDepartamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                empDepartamentoActionPerformed(evt);
            }
        });

        btnModificarEmp.setText("Modificar");
        btnModificarEmp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarEmpActionPerformed(evt);
            }
        });

        btnEliminarEmp.setText("Eliminar");
        btnEliminarEmp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarEmpActionPerformed(evt);
            }
        });

        btnBuscarTodosEmp.setText("Buscar Todos");
        btnBuscarTodosEmp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarTodosEmpActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Monocraft", 1, 18)); // NOI18N
        jLabel1.setText("Empleados");

        jLabel2.setText("Clave");

        btnBuscarIDEmp.setText("Buscar por ID");
        btnBuscarIDEmp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarIDEmpActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 522, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnGuardarEmp)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnModificarEmp)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnEliminarEmp)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnBuscarTodosEmp))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                            .addComponent(jLabel9)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(empNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                            .addComponent(jLabel8)
                                            .addGap(60, 60, 60)
                                            .addComponent(empDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel7)
                                            .addComponent(Departamento1))
                                        .addGap(30, 30, 30)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(empTelefono)
                                            .addComponent(empDepartamento, 0, 168, Short.MAX_VALUE))))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(empClave))
                                    .addComponent(btnBuscarIDEmp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jLabel1)))
                .addContainerGap(63, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(empNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(empClave, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnBuscarIDEmp)
                        .addGap(32, 32, 32)
                        .addComponent(Departamento1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addComponent(jLabel8))
                            .addComponent(empDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(jLabel7))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(empTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(empDepartamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnGuardarEmp)
                    .addComponent(btnModificarEmp)
                    .addComponent(btnEliminarEmp)
                    .addComponent(btnBuscarTodosEmp))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(48, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void txtNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNombreActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        // TODO add your handling code here:

        SessionFactory sf = HibernateUtil.getSessionFactory();
        Session session = sf.getCurrentSession();
        Transaction t = session.beginTransaction();
        Departamento selectedDepartamento = (Departamento) jComboBox1.getSelectedItem();

        Empleado empleado = new Empleado();
        empleado.setNombre(txtNombre.getText());
        empleado.setDireccion(txtDireccion.getText());
        empleado.setTelefono(txtTelefono.getText());
        empleado.setDepto(selectedDepartamento);

        session.save(empleado);

        JOptionPane.showMessageDialog(this, "se guardo");

        t.commit();
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void empNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_empNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_empNombreActionPerformed

    private void btnGuardarEmpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarEmpActionPerformed
        // TODO add your handling code here:

        SessionFactory sf = HibernateUtil.getSessionFactory();
        Session session = sf.getCurrentSession();
        Transaction t = session.beginTransaction();

        String selectedName = (String) empDepartamento.getSelectedItem();
        
        Map<String, Departamento> departmentMap = new HashMap<>();
        
        List<Departamento> listaDepartamentos = session.createQuery("from Departamento", Departamento.class).list();

        for (Departamento departamento : listaDepartamentos) {
            empDepartamento.addItem(departamento.getNombre());  // Add department name to JComboBox
            departmentMap.put(departamento.getNombre(), departamento);  // Map name to object]
        }

        Empleado empleado = new Empleado();
        empleado.setNombre(empNombre.getText());
        empleado.setDireccion(empDireccion.getText());
        empleado.setTelefono(empTelefono.getText());
        empleado.setDepto(departmentMap.get(selectedName));

        session.save(empleado);

        JOptionPane.showMessageDialog(this, "Se guardo Empleado: " + empNombre.getText());

        t.commit();
    }//GEN-LAST:event_btnGuardarEmpActionPerformed

    private void empDepartamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_empDepartamentoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_empDepartamentoActionPerformed

    private void btnBuscarTodosEmpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarTodosEmpActionPerformed
        // TODO add your handling code here:
        
        // Crear el modelo de la tabla con las columnas adecuadas
        String[] columnNames = {"Clave", "Nombre", "Dirección", "Teléfono", "Departamento"};
        DefaultTableModel model = new DefaultTableModel(columnNames, 0);
        
         
        // Obtener los datos de la base de datos usando Hibernate
        Session session = HibernateUtil.getSessionFactory().getCurrentSession();
        session.beginTransaction();
        List<Empleado> listaEmpleados = session.createQuery("from Empleado", Empleado.class).list();
        
        // Llenar el modelo de la tabla con los datos obtenidos
        for (Empleado emp : listaEmpleados) {
            String nombreDepartamento = emp.getDepto() != null ? emp.getDepto().getNombre() : "Sin departamento";
            Object[] rowData = {
                emp.getClave(),
                emp.getNombre(),
                emp.getDireccion(),
                emp.getTelefono(), 
                nombreDepartamento
            };
            model.addRow(rowData);
            System.out.println("Clave: " + emp.getClave() + ", Nombre: " + emp.getNombre() + ", Direccion: " + emp.getDireccion() + ", Teléfono: " + emp.getTelefono());
        }
        
        session.getTransaction().commit();
        
        // Añadir la tabla dentro de un JScrollPane para hacerla desplazable
       TablaEmpleados.setModel(model);
        
    }//GEN-LAST:event_btnBuscarTodosEmpActionPerformed

    private void btnModificarEmpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarEmpActionPerformed
        // TODO add your handling code here:
        
         try {

            if (empClave.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Ingresa un ID.");
                return;
            }

        Empleado empleado = new Empleado();
        empleado.setClave(Integer.valueOf(empClave.getText()));

        SessionFactory sf = HibernateUtil.getSessionFactory();
        Session session = sf.getCurrentSession();
        Transaction t = session.beginTransaction();

        String selectedName = (String) empDepartamento.getSelectedItem();

        Map<String, Departamento> departmentMap = new HashMap<>();

        List<Departamento> listaDepartamentos = session.createQuery("from Departamento", Departamento.class).list();

        for (Departamento departamento : listaDepartamentos) {
            empDepartamento.addItem(departamento.getNombre());  // Add department name to JComboBox
            departmentMap.put(departamento.getNombre(), departamento);  // Map name to object]
        }

        if (selectedName != null) {
            Departamento selectedDepartamento = departmentMap.get(selectedName);  // Get the object from the map
            System.out.println("Selected Departamento: " + selectedDepartamento.getNombre());
        } 

        Empleado empleadoEncontrado = session.get(Empleado.class, empleado.getClave());
        if (empleadoEncontrado != null) {
            empleadoEncontrado.setNombre(empNombre.getText());
            empleadoEncontrado.setDireccion(empDireccion.getText());
            empleadoEncontrado.setTelefono(empTelefono.getText());
            empleadoEncontrado.setDepto(departmentMap.get(selectedName));

            session.update(empleadoEncontrado);
            System.out.println("Empleado actualizado: " + empleadoEncontrado.getNombre());
            JOptionPane.showMessageDialog(this, "Empleado " + empleado.getClave() + " actualizado a: " + empleadoEncontrado.getNombre());

        }
        t.commit();
        
        } catch (NumberFormatException e) {

            JOptionPane.showMessageDialog(this, "Ingresa un ID valido.");

        }

    }//GEN-LAST:event_btnModificarEmpActionPerformed

    private void btnEliminarEmpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarEmpActionPerformed
        // TODO add your handling code here:

        try {

            if (empClave.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Ingresa un ID.");
                return;
            }

            int clave = Integer.parseInt(empClave.getText());

            Empleado empleado = new Empleado();
            empleado.setClave(clave);

            SessionFactory sf = HibernateUtil.getSessionFactory();
            Session session = sf.getCurrentSession();
            Transaction t = session.beginTransaction();

            Empleado empleadoEncontrado = session.get(Empleado.class, empleado.getClave());

            if (empleadoEncontrado != null) {
                session.delete(empleadoEncontrado);
                JOptionPane.showMessageDialog(this, "Empleado eliminado: " + empleadoEncontrado.getNombre());
            } else {
                JOptionPane.showMessageDialog(this, "No se encontro empleado de id: " + clave);
            }

            t.commit();

        } catch (NumberFormatException e) {

            JOptionPane.showMessageDialog(this, "Ingresa un ID valido.");

        }

    }//GEN-LAST:event_btnEliminarEmpActionPerformed

    private void btnBuscarIDEmpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarIDEmpActionPerformed
        // TODO add your handling code here:
        
        try {

            if (empClave.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Ingresa un ID.");
                return;
            }

            String[] columnNames = {"Clave", "Nombre", "Direccion", "Telefono", "Departamento"};
            int id = Integer.valueOf(empClave.getText());

            DefaultTableModel model = new DefaultTableModel(columnNames, 0);

            // Obtener los datos de la base de datos usando Hibernate
            Session session = HibernateUtil.getSessionFactory().getCurrentSession();
            session.beginTransaction();
            List<Empleado> listaDepartamentos = session.createQuery("from Empleado", Empleado.class).list();

            // Llenar el modelo de la tabla con los datos obtenidos
            for (Empleado emp : listaDepartamentos) {

                if (emp.getClave() == id) {
                    String nombreDepartamento = emp.getDepto() != null ? emp.getDepto().getNombre() : "Sin departamento";
                    Object[] rowData = {
                        emp.getClave(),
                        emp.getNombre(),
                        emp.getDireccion(),
                        emp.getTelefono(),
                        nombreDepartamento

                    };
                    model.addRow(rowData);

                }
            }

            session.getTransaction().commit();

            TablaEmpleados.setModel(model);

        } catch (NumberFormatException e) {

            JOptionPane.showMessageDialog(this, "Ingresa un ID valido.");

        }

    }//GEN-LAST:event_btnBuscarIDEmpActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Departamento;
    private javax.swing.JLabel Departamento1;
    private javax.swing.JTable TablaEmpleados;
    private javax.swing.JButton btnBuscarIDEmp;
    private javax.swing.JButton btnBuscarTodosEmp;
    private javax.swing.JButton btnEliminarEmp;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnGuardarEmp;
    private javax.swing.JButton btnModificarEmp;
    private javax.swing.JTextField empClave;
    private javax.swing.JComboBox<String> empDepartamento;
    private javax.swing.JTextField empDireccion;
    private javax.swing.JTextField empNombre;
    private javax.swing.JTextField empTelefono;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtDireccion;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtTelefono;
    // End of variables declaration//GEN-END:variables
}
